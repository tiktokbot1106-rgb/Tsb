-- Script: Orbitar Player
-- By ChatGPT

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

-- =================== Variáveis ===================
local Distancia = 5      -- distância para orbitar
local Velocidade = 1.5   -- velocidade do orbitar
local Orbitar = false
local TargetHRP = nil
local HRP = nil
local Angulo = 0

-- =================== Atualiza Character ===================
local function UpdateCharacter()
	local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	HRP = character:WaitForChild("HumanoidRootPart")
end
UpdateCharacter()
LocalPlayer.CharacterAdded:Connect(UpdateCharacter)

-- =================== GUI ===================
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 150, 0, 180)  -- compacto
Frame.Position = UDim2.new(0, 20, 0, 20)
Frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Draggable = false
Frame.Parent = ScreenGui

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 25)
Title.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Title.BorderSizePixel = 0
Title.Text = "Orbitar Player"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextScaled = true
Title.Parent = Frame

-- =================== Arrastar GUI ===================
do
	local dragging, dragInput, dragStart, startPos = false, nil, nil, nil
	Title.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			dragInput = input
			dragStart = input.Position
			startPos = Frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
					dragInput = nil
				end
			end)
		end
	end)
	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			local delta = input.Position - dragStart
			Frame.Position = UDim2.new(
				startPos.X.Scale,
				startPos.X.Offset + delta.X,
				startPos.Y.Scale,
				startPos.Y.Offset + delta.Y
			)
		end
	end)
end

-- =================== Lista de Players ===================
local ScrollingFrame = Instance.new("ScrollingFrame")
ScrollingFrame.Size = UDim2.new(1, 0, 0.5, -25)
ScrollingFrame.Position = UDim2.new(0, 0, 0, 25)
ScrollingFrame.ScrollBarThickness = 6
ScrollingFrame.BackgroundTransparency = 1
ScrollingFrame.Parent = Frame

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 2)
UIListLayout.Parent = ScrollingFrame

local function StartOrbit(target)
	TargetHRP = target
	Orbitar = true
end

local function AtualizarLista()
	for _, child in pairs(ScrollingFrame:GetChildren()) do
		if child:IsA("TextButton") then child:Destroy() end
	end
	for _, plr in pairs(Players:GetPlayers()) do
		if plr ~= LocalPlayer then
			local btn = Instance.new("TextButton")
			btn.Size = UDim2.new(1, -4, 0, 25)
			btn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
			btn.TextColor3 = Color3.fromRGB(255, 255, 255)
			btn.Text = plr.Name
			btn.TextScaled = true
			btn.Parent = ScrollingFrame
			btn.MouseButton1Click:Connect(function()
				if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
					StartOrbit(plr.Character.HumanoidRootPart)
				end
			end)
		end
	end
	ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y)
end

Players.PlayerAdded:Connect(AtualizarLista)
Players.PlayerRemoving:Connect(AtualizarLista)
AtualizarLista()

-- =================== Sliders ===================
local SliderFrame = Instance.new("Frame")
SliderFrame.Size = UDim2.new(1, 0, 0.5, -25)
SliderFrame.Position = UDim2.new(0, 0, 0.5, 25)
SliderFrame.BackgroundTransparency = 1
SliderFrame.Parent = Frame

local function CreateSlider(name, min, max, default, posY, callback)
	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(1, -10, 0, 20)
	label.Position = UDim2.new(0, 5, 0, posY)
	label.BackgroundTransparency = 1
	label.Text = name .. ": " .. default
	label.TextColor3 = Color3.fromRGB(255,255,255)
	label.TextScaled = true
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Parent = SliderFrame

	local sliderBG = Instance.new("Frame")
	sliderBG.Size = UDim2.new(1, -10, 0, 20)
	sliderBG.Position = UDim2.new(0,5,0,posY+20)
	sliderBG.BackgroundColor3 = Color3.fromRGB(80,80,80)
	sliderBG.BorderSizePixel = 0
	sliderBG.Parent = SliderFrame

	local sliderFill = Instance.new("Frame")
	sliderFill.Size = UDim2.new((default-min)/(max-min),1,1,0)
	sliderFill.BackgroundColor3 = Color3.fromRGB(150,150,150)
	sliderFill.BorderSizePixel = 0
	sliderFill.Parent = sliderBG

	local handle = Instance.new("Frame")
	handle.Size = UDim2.new(0, 10, 1, 0)
	handle.Position = UDim2.new((default-min)/(max-min)-0.05,0,0,0)
	handle.BackgroundColor3 = Color3.fromRGB(200,200,200)
	handle.BorderSizePixel = 0
	handle.Parent = sliderBG

	local draggingSlider = false
	local sliderInput = nil
	local function updateSlider(posX)
		local pos = math.clamp(posX - sliderBG.AbsolutePosition.X,0,sliderBG.AbsoluteSize.X)
		local value = min + (pos/sliderBG.AbsoluteSize.X)*(max-min)
		sliderFill.Size = UDim2.new((value-min)/(max-min),0,1,0)
		handle.Position = UDim2.new((value-min)/(max-min)-handle.Size.X.Scale/2,0,0,0)
		label.Text = name .. ": " .. string.format("%.1f",value)
		callback(value)
	end

	sliderBG.InputBegan:Connect(function(input)
		if input.UserInputType==Enum.UserInputType.Touch then
			draggingSlider=true
			sliderInput=input
			updateSlider(input.Position.X)
		end
	end)
	sliderBG.InputChanged:Connect(function(input)
		if draggingSlider and input==sliderInput then updateSlider(input.Position.X) end
	end)
	sliderBG.InputEnded:Connect(function(input)
		if input.UserInputType==Enum.UserInputType.Touch and input==sliderInput then
			draggingSlider=false
			sliderInput=nil
		end
	end)
end

CreateSlider("Velocidade",0.5,10,Velocidade,0,function(val) Velocidade=val end)
CreateSlider("Distancia",2,15,Distancia,50,function(val) Distancia=val end)

-- =================== Orbitar ===================
RunService.Heartbeat:Connect(function(dt)
	if Orbitar and TargetHRP and HRP then
		Angulo = Angulo + Velocidade * dt
		local x = math.cos(Angulo) * Distancia
		local z = math.sin(Angulo) * Distancia
		local pos = TargetHRP.Position + Vector3.new(x, 0, z)
		HRP.CFrame = CFrame.lookAt(pos, TargetHRP.Position)
	end
end)
